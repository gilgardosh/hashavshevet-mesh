sources:
  - name: Hashavshevet
    handler:
      jsonSchema:
        baseUrl: 'https://${WIZ_URL}/'
        baseSchema: ./json-schemas/hashavshevetSchema.json
        operationHeaders:
          Authorization: 'Bearer ${WIZ_AUTH_TOKEN}'
          host: '${WIZ_URL}'
          Content-Type: application/x-www-form-urlencoded
          Accept: application/json
        operations:
          - type: Query
            field: getSession
            path: /api/napi
            method: POST
            responseTypeName: napiResopnse
          - type: Query
            field: getCompanies
            path: /CompanyListToTokenApi/TokenCompanies
            method: POST
            responseTypeName: getCompaniesResopnse

          - type: Query
            field: getRecords
            path: /ExportDataApi/exportData
            method: POST
            responseTypeName: getRecordsResponse
            # responseSchema: ./json-schemas/getRecordsResponse.json

          - type: Query
            field: getTransactions
            path: /ExportDataApi/exportData
            method: POST
            responseTypeName: getTransactionsResponse
          - type: Mutation
            field: importTransactionsToBatch
            path: /jtransApi/tmpBatch
            method: POST
            requestSchema: ./json-schemas/importTransactionsToBatchRequest.json
            responseSchema: ./json-schemas/importTransactionsToBatchResponse.json

          - type: Mutation
            field: createBatch
            path: /jtransApi/newBatch
            method: POST
            responseSchema: ./json-schemas/newBatchResponse.json
          - type: Query
            field: getBatch
            path: /ExportDataApi/exportData
            method: POST
            requestSchema: ./json-schemas/getBatchRequest.json
            responseTypeName: getBatchResponse
          - type: Query
            field: checkBatch
            path: /jtransApi/chkBatch
            method: POST
            requestSchema: ./json-schemas/checkBatchRequest.json
            responseTypeName: checkBatchResponse
          - type: Mutation
            field: issueBatch
            path: /jtransApi/issueBatch
            method: POST
            requestSchema: ./json-schemas/issueBatchRequest.json
            responseSchema: ./json-schemas/issueBatchResponse.json

          - type: Query
            field: getAccounts
            path: /ExportDataApi/exportData
            method: POST
            responseSchema: ./json-schemas/getAccountsResponse.json
          # importAccounts (importIndexRecords)
          # importItems (importIndexRecords)
          # deleteIndexRecords

          - type: Query
            field: getBankPageRecords
            path: /ExportDataApi/exportData
            method: POST
            requestSchema: ./json-schemas/getBankPageRecordsRequest.json
            responseSchema: ./json-schemas/getBankPageRecordsResponse.json
          - type: Mutation
            field: importBankPage
            path: /BankPagesApi/importBankPage
            method: POST
            requestSchema: ./json-schemas/importBankPageRequest.json
            responseSchema: ./json-schemas/importBankPageResponse.json

            # createDocument
            # showDocument
            # delDocument
            # issueDoc

            # crmActivities
            # crmActivitiesTest

    transforms:
      - resolversComposition:
          mode: bare
          compositions:
            - resolver: Query.getRecords
              composer: ./src/resolvers/mesh-resolvers.ts#getRecordsResolver
            - resolver: Query.getTransactions
              composer: ./src/resolvers/mesh-resolvers.ts#getTransactionsResolver
            - resolver: Query.getBatch
              composer: ./src/resolvers/mesh-resolvers.ts#getBatchResolver
            - resolver: Query.getAccounts
              composer: ./src/resolvers/mesh-resolvers.ts#getAccountsResolver
            - resolver: Query.getBankPageRecords
              composer: ./src/resolvers/mesh-resolvers.ts#getBankPageRecordsResolver
serve:
  browser: false
  exampleQuery: ./example-queries/*.graphql

require:
  - ts-node/register/transpile-only

additionalTypeDefs: |
  extend type HashavshevetSchemaJsonTransaction {
    batch: HashavshevetSchemaJsonBatch
    records: [HashavshevetSchemaJsonRecord]
  }
  extend type HashavshevetSchemaJsonBatch {
    transactions: [HashavshevetSchemaJsonTransaction]
  }
  extend type HashavshevetSchemaJsonRecord {
    transaction: HashavshevetSchemaJsonTransaction
    batch: HashavshevetSchemaJsonBatch
  }

additionalResolvers:
  - ./src/resolvers/mesh-resolvers.ts
